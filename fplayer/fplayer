#!/bin/bash
#
# fplayer - watch last buffored flash movie (default in mplayer).
#   inspired by Ivan Agarkov script
#   (http://habrahabr.ru/blogs/linux/104420/#comment_3258122)
#
# https://github.com/macie/linux-shell-scripts
#
# Copyright (c) 2011-2014 Maciej Żok <maciek.zok@gmail.com>
# MIT License (http://opensource.org/licenses/MIT)


#
#  DEFAULTS
#

readonly _VERSION_='1.3-dev'

_PLAYER=mplayer
_PLAYER_OPTIONS=''


#
#  MESSAGES
#

help_message () {
  #
  # Shows help message.
  #
  # Globals:
  #     None.
  #
  # Arguments:
  #     None.
  #
  # Returns:
  #     String message to standard output
  #
  echo 'fplayer - watch last buffored flash movie (default in mplayer).'
  echo 'Usage:'
  echo '  fplayer [options]'
  echo 
  echo 'Options:'
  echo '  -p, --player <command>          use specified player'
  echo '  -o, --player-options <options>  set player options'
  echo '  -h, --help                      show this help and exit'
  echo '  -V, --version                   show version number and exit'
}

version_message() {
  #
  # Shows version message.
  #
  # Globals:
  #     _VERSION_ (str) -Version number.
  #
  # Arguments:
  #     None.
  #
  # Returns:
  #     String message to standard output
  #
  echo "fplayer ${_VERSION_}"
  echo
  echo 'Copyright (c) 2014 Maciej Żok'
  echo 'MIT License (http://opensource.org/licenses/MIT)'
}

error_message() {
  #
  # Shows error message.
  #
  # Globals:
  #     None.
  #
  # Arguments:
  #     msg (str) - Error message.
  #
  # Returns:
  #     String message to err output.
  #
  local msg
  local "$@"

  echo "Error: ${msg}." 1>&2
}


#
#  FUNCTIONS
#

parse_args() {
  #
  # Parses script parameters.
  #
  # Globals:
  #     _PLAYER (str) - Movie player command.
  #     _PLAYER_OPTIONS (str) - Movie player command options.
  #
  # Args:
  #     Script params.
  #
  # Returns:
  #     String message or nothing.
  #
  while [[ $1 == -* ]]; do
    case "$1" in
      -h|--help|-\?)
        help_message
        exit 0
        ;;

      -V|--version|-\?)
        version_message
        exit 0
        ;;

      -p|--player)
        if (($# > 1)); then
          PLAYER=$2
          shift 2
        else
          error_message msg='no player specified'
          exit 1
        fi
        ;;

      -o|--player-options)
        if (($# > 1)); then
          PLAYER_OPTIONS=$2
          shift 2
        else
          error_message msg='no player options specified'
          exit 1
          fi
          ;;

      -*)
        error_message msg="invalid option: $1"
        exit 1
        ;;
    esac
  done
}

get_PID() {
  #
  # Retrives flash plugin PID.
  #
  # Globals:
  #     None.
  #
  # Arguments:
  #     None.
  #
  # Returns:
  #     PID number or exit (if no PID).
  #

  # FIXME: "awk" to "grep -0"
  local pid="$(ps x \
                 | awk 'match($0,/libflashplayer.so/)' \
                 | awk '!/awk match/{print $1}' \
             )"

  if [[ ${pid} != '' ]]; then
    echo ${pid}
  else
    error_message msg='no PID number (no open browser?)'
    exit 1
  fi
}

get_FD() {
  #
  # Retrives FD id.
  #
  # Globals:
  #     None.
  #
  # Arguments:
  #    pid (str) - flash plugin PID number
  #
  # Returns:
  #     FD number or exit (if no FD).
  #
  local pid
  local "$@"

  # FIXME: "awk" to "grep -0"
  local fd=$(lsof -p ${pid} \
               | awk 'match($0,/Flash/){print $4}' \
               | sed 's/[a-z]$//' \
            )

  if [[ ${fd} != '' ]]; then
    echo ${fd}
  else
    error_message msg='no FD number (no file in cache?)'
    exit 1
  fi
}

play() {
  #
  # Plays flash file from cache.
  #
  # Globals:
  #     _PLAYER (str) - Movie player command.
  #     _PLAYER_OPTIONS (str) - Movie player command options.
  #
  # Arguments:
  #     fd (str) - FD number.
  #     pid (str) - Flash plugin PID number.
  #
  # Returns:
  #     None.
  #
  local fd pid
  local "$@"

  ${_PLAYER} ${_PLAYER_OPTIONS} /proc/${pid}/fd/${fd}
}


#
#  MAIN ROUTINE
#

main() {
  #
  # Main program subroutine.
  #
  parse_args "$@"
  get_PID pid
  get_FD pid=${pid} fd
  play pid=${pid} fd=${fd}

  exit 0
}

main "$@"
